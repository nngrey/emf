- if @logic_model.present?
  .container
    .dropdown
      .row{:style => "margin-bottom: 10px"}
        .col-sm-4
          %h3 Logic model
        - if can? :create, @program
          .col-sm-offset-6.col-sm-2
            %button#dropdownMenu1.btn.btn-success.dropdown-toggle{"aria-expanded" => "true", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button"}
              Actions
              %span.caret
            %ul.dropdown-menu{"aria-labelledby" => "dropdownMenu1"}
              - if @program.logic_model.blank?
                %li
                  %a{:href => new_program_logic_model_path(@program)} Create logic model
              - else
                %li
                  %a{:href => logic_model_path(@program.logic_model)} Edit logic model

    .table-responsive
      %table.table.table-bordered
        %thead
          %tr
            %th Inputs
            %th Activities
            %th Outputs
            %th Outcomes
            %th Impacts
        %tbody
          %tr
            %td
              %ul
                - if @logic_model.logic_model_inputs.any?
                  - @logic_model.logic_model_inputs.each do |input|
                    %li= input.description
                - else
                  %li TBD
            %td
              %ul
                - if @logic_model.activities.any?
                  - @logic_model.activities.each do |activity|
                    %li= activity.name
                - else
                  %li TBD
            %td
              %ul
                - if @logic_model.outputs.any?
                  - @logic_model.outputs.each do |output|
                    %li= output.description
                - else
                  %li TBD
            %td
              %ul
                - if @logic_model.outcomes.any?
                  - @logic_model.outcomes.each do |outcome|
                    %li= outcome.description
                - else
                  %li TBD
            %td
              %ul
                - if @logic_model.impacts.any?
                  - @logic_model.impacts.each do |impact|
                    %li= impact.description
                - else
                  %li TBD
    - if @logic_model.program.framework.evaluative_questions.blank?
      = link_to "Create evaluative framework", new_framework_evaluative_question_path(@logic_model.program.framework), :class => "btn btn-default"

